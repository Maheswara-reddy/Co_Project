import re

reg = [0]*32
mem = [0]*4096

def funcheck(thislist):
    
    if thislist[0] == "jr" && thislist[1] == "$ra":
        sys.exit()
                        
    elif thislist[0] == "add":
        del thislist[0]
        addition(thislist)
        line = fp.readline()
        cnt +=1
                        
    elif thislist[0] == "sub":
        del thislist[0]
        subtraction(thislist)
        line = fp.readline()
        cnt += 1
                        
    elif thislist[0] == "bne":
        del thislist[0]
        bnote(thislist)
        line = fp.readline()
        cnt += 1
        
    elif thislist[0]=="la":
        del thislist[0]
        loadarray(thislist)
        line = fp.readline
        cnt += 1
        
                        
    elif thislist[0] == "lw":
        del thislist[0]
        loadword(thislist)
        line = fp.readline()
        cnt += 1
                        
    elif thislist[0] == "sw":
        del thislist[0]
        storeword(thislist)
        line = fp.readline()
        cnt += 1
                        
    elif thislist[0] == "j":
        del thislist[0]
        jump(thislist)
        line = fp.readline()
        cnt += 1
        
    elif thislist[0] == "slt":
        del thislist[0]
        slt(thislist)
        line = fp.readline()
        cnt += 1
        
    elif thislist[0] == "li":
        del thislist[0]
        loadi(thislist)
        line = fp.readline()
        cnt += 1
        
                        
    else:
        del thislist[0]
        funchk()
                        

def addition(thislist):
    p = linechk(thislist[0])
    q = linechk(thislist[1])
    r = linechk(thislist[2])
    
    reg[p] = reg[q] + reg[r]
    
    
def subtraction(thislist):
    p = linechk(thislist[0])
    q = linechk(thislist[1])
    r = linechk(thislist[2])
    
    reg[p] = reg[q] - reg[r]
    
    
    
def bnote(thislist):
    p = linechk(thislist[0])
    q = linechk(thislist[1])
    n = thislist[2]
    if reg[p] != reg[q]:
        with open(filepath) as ap:
            line = ap.readline()
            while line:
                lines = line.strip(' ') 
                thislist = re.split("( )",lines)
                    
            for i in thislist:
                if i ==  ","||" ":
                    del thislist[i]
                if thislist[0] == n:
                    funchk(thislist)
                    
def jump(thislist):
    l = thislist[0]
    with open(filepath) as bp:
            line = bp.readline()
            while line:
                    thislist = re.split("( )",line)
                    
                    for i in thislist:
                        if i ==  ","||" "
                            del thislist[i]
                    if thislist[0] == l:
                        funchk(thislist)
                    

def slt(thislist):
     p = linechk(thislist[0])
     q = linechk(thislist[1])
     r = linechk(thislist[2])
    
    if reg[q] < reg[r]:
        reg[p] = 1
    else :
         reg[p] = 0
        
def loadarray(thislist):
    p = linechk(thislist[0])
    reg[p] = c
    
        
     
def loadword(thislist):
    thislist3 = re.split("(" || ")", thislist[2])
     for i in thislist:
        if i ==  "(" || ")":
            del thislist[i]

    p = linechk(thislist[0])
    q = linechk(thislist3[1])
    r = int(thislist3[0])
    reg[p] = mem[ reg[q] + (r/4) ]
    
    
    
def storeword(thislist):
    thislist4 = re.split("(" || ")", thislist[2])
     for i in thislist:
        if i ==  "(" || ")":
            del thislist[i]

    p = linechk(thislist[0])
    q = linechk(thislist3[1])
    r = int(thislist3[0])
    mem[ reg[q] + (r/4) ] = reg[p]
    
    
def loadi(thislist):
    p = linechk(thislist[0])
    reg[p] = int(thislist[1])
    
def linechk(str i):
    if i == "$S0":
        k=0
    elif i == "$S1":
        k=1
    elif i == "$S2":
        k=2
    elif i == "$S3":
        k=3
    elif i == "$S4":
        k=4
    elif i == "$S5":
        k=5
    elif i == "$S6":
        k=6
    elif i == "$S7":
        k=7
    elif i == "$t0":
        k=8
    elif i == "$t1":
        k=9
    elif i == "$t2":
        k=10
    elif i == "$t3":
        k=11
    elif i == "$t4":
        k=12
    elif i == "$t5":
        k=13
    elif i == "$t6":
        k=14
    elif i == "$t7":
        k=15
    elif i == "$t8":
        k=16
    elif i == "$t9":
        k=17
    elif i == "$zero":
        k=18
    elif i == "$a0":
        k=19
    elif i == "$a1":
        k=20
    elif i == "$a2":
        k=21
    elif i == "$a3":
        k=22
    elif i == "$v0":
        k=23
    elif i == "$v1":
        k=24
    elif i == "$gp":
        k=25
    elif i == "$fp":
        k=26
    elif i == "$sp":
        k=27
    elif i == "$ra":
        k=28
    elif i == "$at":
        k=29
    elif i == "$k0":
        k=30
    elif i == "$k1":
        k=31

filepath = 'testcode.txt'
with open(filepath) as fp:
    line = fp.readline()
    cnt = 1
    while line:
       
    if line == ".data":
        cnt = 2
        line = fp.readline()
    if cnt == 2:
        if line =="array:":
            line = fp.readline()
            lines =line.strip('.word')
            lines = lines.split(",")
            f=list()
            for i in lines:
                f.append(i.strip())
                thislist1 = f
            h = thislist1.len()
            
             c = 0
            while c < h:
                 mem[c] = int(thislist1[c])
                 c+=1
        
        cnt = 3       
        line = fp.readline()
    if cnt == 3:
        if line == ".text":
            cnt = 4
            line = fp.readline()
    if cnt == 4:
        if line == ".globl main":
            cnt = 5
            line = fp.readline()
    if cnt == 5:
        if line == "main:":
            cnt = 6 
            line = fp.readline()
            lines = line.split(",")
            g=list()
            for i in lines:
                g.append(i.strip())
                thislist = g
            line = fp.readline()            
    if cnt >=6:
        funcheck()
                    